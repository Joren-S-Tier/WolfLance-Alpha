extends Node


export var Seed = "PlanetName";
export var NodeCount = 50;
var rngX;
var rngY;
var counter;
#const pi = 1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989;
var RailMaster = preload("res://RailMaster.tscn");

# Called when the node enters the scene tree for the first time.
func _ready():
	var xseed = Seed + "X"
	var yseed = Seed + "Y"
	var RailInstance = RailMaster.instance()
	rngX = RandomNumberGenerator.new()
	rngX.seed = hash(xseed)
	rngY = RandomNumberGenerator.new()
	rngY.seed = hash(yseed)
	add_child(RailInstance)
	


# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta):
#	if Input.is_action_just_released("ui_accept"):
#		var randx = rngX.randi_range(0,10) -5
#		var randy = rngY.randi_range(0,10) -5
#		print("rand x is ",randx, " rand y is ",randy)
#		var testbucket = railgen()
		

func railgen():
	var newrail = Curve3D.new();
	newrail.set_bake_interval(50);
	var C = Vector3.ZERO;
	newrail.add_point(C)
	for p in NodeCount:
		C.x = C.x + rngX.randi_range(0,10) -5
		C.y = C.y + rngY.randi_range(0,10) -5
		C.z = C.z - 10
		
		newrail.add_point(C)
	return newrail
	
	
	
